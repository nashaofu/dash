name: build

on:
  workflow_dispatch: # 手动触发
  push:
    branches: ["master"]
    # Publish semver tags as releases.
    tags: ["v*.*.*"]
  pull_request:
    branches: ["master"]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io

jobs:
  build-client:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: latest
          cache: "yarn"
          cache-dependency-path: client/yarn.lock
      - name: Build client
        run: cd client && yarn && yarn build
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: dahs-client
          path: client/dist
          if-no-files-found: error
  build-server:
    strategy:
      fail-fast: false
      matrix:
        settings:
          - target: x86_64-apple-darwin
            host: macos-latest
          - target: aarch64-apple-darwin
            host: macos-latest
          - target: x86_64-pc-windows-msvc
            host: windows-latest
          - target: aarch64-pc-windows-msvc
            host: windows-latest
          # - target: x86_64-unknown-linux-gnu
          #   host: ubuntu-latest
          # - target: aarch64-unknown-linux-gnu
          #   host: ubuntu-latest
          - target: x86_64-unknown-linux-musl
            host: ubuntu-latest
          - target: aarch64-unknown-linux-musl
            host: ubuntu-latest

    name: build ${{ matrix.settings.target }}
    runs-on: ${{ matrix.settings.host }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Cache cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-${{ matrix.settings.target }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.settings.target }}
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target ${{ matrix.settings.target }}
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: dash-${{ matrix.settings.target }}
          path: target/${{ matrix.settings.target }}/release/dash
          if-no-files-found: error

  build-docker:
    runs-on: ubuntu-latest
    needs:
      - build-client
      - build-server
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2
      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup docker buildx
        uses: docker/setup-buildx-action@v2

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Login to registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Download dash-client artifact
        uses: actions/download-artifact@v3
        with:
          name: dash-client
          path: client/dist
      - name: Download dash-x86_64-unknown-linux-musl artifact
        uses: actions/download-artifact@v3
        with:
          name: dash-x86_64-unknown-linux-musl
          path: target/release
      - name: Display structure of downloaded files
        run: ls -R

      - name: Change file mode
        run: chmod +x target/release/dash

      - name: Build and push Docker images
        uses: docker/build-push-action@v4
        with:
          context: .
          file: build.Dockerfile
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.REGISTRY }}/nashaofu/dash:latest

      - name: Remove target/release
        run: rm -rf target/release
      - name: Download dash-aarch64-unknown-linux-musl artifact
        uses: actions/download-artifact@v3
        with:
          name: dash-aarch64-unknown-linux-musl
          path: target/release
      - name: Display structure of downloaded files
        run: ls -R

      - name: Change file mode
        run: chmod +x target/release/dash

      - name: Build and push Docker images
        uses: docker/build-push-action@v4
        with:
          context: .
          file: build.Dockerfile
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.REGISTRY }}/nashaofu/dash:latest
